{"version":3,"sources":["reducers/index.js","reducers/authedUser.js","actions/authedUser.js","reducers/users.js","actions/users.js","reducers/polls.js","actions/polls.js","middleware/logger.js","middleware/index.js","components/Poll.js","components/Dashboard.js","components/User.js","utils/_DATA.js","actions/shared.js","components/PollDetails.js","utils/helpers.js","components/LeaderBoard.js","components/NewPoll.js","components/NavBar.js","components/Login.js","components/404Page.js","components/App.js","index.js"],"names":["combineReducers","authedUser","state","action","type","id","users","qid","answer","answers","questions","concat","polls","poll","votes","loadingBar","loadingBarReducer","logger","store","next","console","group","log","returnValue","getState","groupEnd","composeWithDevTools","applyMiddleware","thunk","withRouter","connect","props","Card","onClick","e","preventDefault","history","push","loadDetails","CardBody","CardTitle","optionOne","text","optionTwo","DashBoard","PureComponent","activeTab","toggle","tab","this","setState","render","answeredPolls","unansweredPolls","Nav","tabs","className","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","Row","map","Col","key","sm","md","user","Object","keys","sort","a","b","timestamp","filter","includes","User","src","avatarURL","alt","name","sarahedo","tylermcginnis","johndoe","author","_saveQuestion","question","Promise","res","rej","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","handleSavePollAnswer","dispatch","showLoading","_saveQuestionAnswer","then","savePollAnswer","addUserAnswer","hideLoading","PollDetails","selectedOption","radioSelected","target","value","handleSubmit","pollAuthor","isAnswered","isOptionOneAnswered","to","optionOneVotes","length","optionTwoVotes","percentageOptionOne","toFixed","percentageOptionTwo","check","size","color","offset","CardHeader","d","time","toLocaleTimeString","substr","slice","toLocaleDateString","formatDate","Form","onSubmit","FormGroup","tag","Label","Input","onChange","Button","disabled","match","params","isOptionTwoAnswered","LeaderBoard","table","Table","index","created","answered","NewPoll","handleOptionOneChange","handleOptionTwoChange","addPoll","for","placeholder","formatedPoll","addUserQuestion","NavBar","isOpen","logout","Navbar","light","expand","NavbarBrand","Link","NavbarToggler","Collapse","navbar","Login","userId","onUserChange","onLogin","setAuthedUser","event","NotFound","App","componentDidMount","handleInitialData","notLoggedIn","path","exact","component","Dashboard","all","receiveUsers","receivePolls","createStore","reducer","middleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cef28d86.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\nimport authedUser from './authedUser'\nimport users from './users'\nimport polls from './polls'\nimport { loadingBarReducer } from 'react-redux-loading'\n\nexport default combineReducers({\n  authedUser,\n  users,\n  polls,\n  loadingBar: loadingBarReducer,\n})\n","import { SET_AUTHED_USER, UNSET_AUTHED_USER } from '../actions/authedUser'\n\nexport default function authedUser (state = null, action) {\n  switch (action.type) {\n    case SET_AUTHED_USER :\n      return action.id\n    case UNSET_AUTHED_USER :\n      return null\n    default :\n      return state\n  }\n}\n","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\nexport const UNSET_AUTHED_USER = 'UNSET_AUTHED_USER'\n\nexport function setAuthedUser (id) {\n  return {\n    type: SET_AUTHED_USER,\n    id,\n  }\n}\n\nexport function unsetAuthedUser () {\n  return {\n    type: UNSET_AUTHED_USER\n  }\n}\n","import { RECEIVE_USERS, ADD_USER_ANSWER, ADD_USER_QUESTION } from '../actions/users'\n\nexport default function state (state = {}, action) {\n  switch(action.type) {\n    case RECEIVE_USERS :\n      return {\n        ...state,\n        ...action.users\n      }\n    case ADD_USER_ANSWER :\n      const { authedUser, qid, answer } = action\n      return {\n        ...state,\n        [authedUser]: {\n          ...state[authedUser],\n          answers: {\n            ...state[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n    case ADD_USER_QUESTION :\n      return {\n        ...state,\n        [action.authedUser]: {\n          ...state[action.authedUser],\n          questions: state[action.authedUser].questions.concat([action.qid])\n        }\n      }\n    default :\n      return state\n  }\n}\n","export const RECEIVE_USERS = 'RECEIVE_USERS'\nexport const ADD_USER_ANSWER = 'ADD_USER_ANSWER'\nexport const ADD_USER_QUESTION = 'ADD_USER_QUESTION'\n\nexport function receiveUsers (users) {\n  return {\n    type: RECEIVE_USERS,\n    users,\n  }\n}\n\nexport function addUserAnswer (authedUser, qid, answer) {\n  return {\n    type: ADD_USER_ANSWER,\n    authedUser,\n    qid,\n    answer\n  }\n}\n\nexport function addUserQuestion (authedUser, qid) {\n  return {\n    type: ADD_USER_QUESTION,\n    authedUser,\n    qid\n  }\n}\n","import { RECEIVE_POLLS, ADD_POLL, SAVE_POLL_ANSWER } from '../actions/polls'\n\nexport default function tweets (state = {}, action) {\n  switch(action.type) {\n    case RECEIVE_POLLS :\n      return {\n        ...state,\n        ...action.polls\n      }\n    case ADD_POLL :\n      const { poll } = action\n      return {\n        ...state,\n        [poll.id]: poll\n      }\n    case SAVE_POLL_ANSWER :\n      const { authedUser, qid, answer } = action\n      return {\n        ...state,\n        [qid]: {\n          ...state[qid],\n          [answer]: {\n            ...state[qid][answer],\n            votes: state[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n    default :\n      return state\n  }\n}\n","export const RECEIVE_POLLS = 'RECEIVE_POLLS'\nexport const ADD_POLL = 'ADD_POLL'\nexport const SAVE_POLL_ANSWER = 'SAVE_POLL_ANSWER'\n\nexport function receivePolls (polls) {\n  return {\n    type: RECEIVE_POLLS,\n    polls,\n  }\n}\n\nexport function addPoll (poll) {\n  return {\n    type: ADD_POLL,\n    poll,\n  }\n}\n\n\nexport function savePollAnswer (authedUser, qid, answer) {\n  return {\n    type: SAVE_POLL_ANSWER,\n    authedUser,\n    qid,\n    answer\n  }\n}\n\n","/* eslint no-console: \"off\" */\nconst logger = (store) => (next) => (action) => {\n  console.group(action.type)\n    console.log('The action: ', action)\n    const returnValue = next(action)\n    console.log('The new state: ', store.getState())\n  console.groupEnd()\n  return returnValue\n}\n\nexport default logger\n","import thunk from 'redux-thunk'\nimport logger from './logger'\nimport { applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport default composeWithDevTools(applyMiddleware(\n  thunk,\n  logger,\n))\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Card, CardBody, CardTitle} from 'reactstrap';\nimport { withRouter } from 'react-router-dom'\n\nconst Poll = (props) => {\n  const loadDetails = (e ,id) => {\n    e.preventDefault()\n    props.history.push(`/questions/${id}`)\n  }\n  const { poll } = props;\n  return (\n    <Card onClick={(e) => loadDetails(e, poll.id)}>\n      <CardBody>\n        <CardTitle>Would You Rather</CardTitle>\n        <ul>\n          <li>{poll.optionOne.text}</li>\n          <li>{poll.optionTwo.text}</li>\n        </ul>\n      </CardBody>\n    </Card>\n  )\n}\n\nPoll.propTypes = {\n  poll: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n}\n\nfunction mapStateToProps ({ polls }, { id }) {\n  return {\n    poll : polls[id]\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Poll))\n","import React, { PureComponent } from 'react';\nimport Poll from './Poll'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nclass DashBoard extends PureComponent {\n  static propTypes = {\n    answeredPolls : PropTypes.array.isRequired,\n    unansweredPolls : PropTypes.array.isRequired\n  }\n  state = {\n    activeTab: '1'\n  };\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  render() {\n    const { answeredPolls, unansweredPolls } = this.props\n    return (\n      <div>\n        <Nav tabs className=\"justify-content-center\">\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Unanswered\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Answered\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              {unansweredPolls.map(qid =>\n              <Col key={qid} sm=\"6\" md=\"4\">\n                <Poll id={qid}/>\n              </Col>\n              )}\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              {answeredPolls.map(qid =>\n              <Col key={qid} sm=\"6\" md=\"4\">\n                <Poll id={qid}/>\n              </Col>\n              )}\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps ({ polls, users, authedUser }) {\n  const user = users[authedUser];\n  const answeredPolls = Object.keys(user.answers)\n    .sort((a,b) => polls[b].timestamp - polls[a].timestamp)\n  return {\n    answeredPolls,\n    unansweredPolls : Object.keys(polls).filter(qid => !answeredPolls.includes(qid))\n      .sort((a,b) => polls[b].timestamp - polls[a].timestamp)\n  }\n}\n\nexport default connect(mapStateToProps)(DashBoard)\n","import React, { PureComponent, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nclass User extends PureComponent {\n  static propTypes = {\n    user: PropTypes.object.isRequired\n  }\n\n  render() {\n    const { user } = this.props;\n    return (\n      <Fragment>\n        <img src={user.avatarURL} className='avatar' alt={`Avatar of ${user.name}`}/>\n        <span>{user.name}</span>\n      </Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps ({ users }, { id }) {\n  return {\n    user : users[id]\n  }\n}\n\n\nexport default connect(mapStateToProps)(User)\n","let users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL: 'https://api.adorable.io/avatars/285/abdulrauf@adorable.io.png',\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionOne',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL: 'https://api.adorable.io/avatars/285/tylermcginnis@adorable.io.pngs',\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL: 'https://api.adorable.io/avatars/285/johndoe@adorable.io.png',\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionOne'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillian'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID () {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...users}), 1000)\n  })\n}\n\nexport function _getQuestions () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...questions}), 1000)\n  })\n}\n\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion (question) {\n  return new Promise((res, rej) => {\n    const formattedQuestion = formatQuestion(question)\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n\n      users = {\n        ...users,\n        [formattedQuestion.author] : {\n          ...users[formattedQuestion.author],\n          questions : users[formattedQuestion.author].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n","import { _getUsers, _getQuestions, _saveQuestionAnswer, _saveQuestion } from '../utils/_DATA'\nimport { receiveUsers, addUserAnswer, addUserQuestion } from '../actions/users'\nimport { receivePolls, savePollAnswer, addPoll } from '../actions/polls'\nimport { showLoading, hideLoading } from 'react-redux-loading'\n\nexport function handleInitialData () {\n  return (dispatch) => {\n    dispatch(showLoading())\n    return Promise.all([_getUsers(), _getQuestions()])\n      .then(([ users, polls ]) => {\n        dispatch(receiveUsers(users))\n        dispatch(receivePolls(polls))\n        dispatch(hideLoading())\n      })\n  }\n}\n\nexport function handleSavePollAnswer (qid, answer) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState()\n\n    dispatch(showLoading())\n    return _saveQuestionAnswer({\n      authedUser,\n      qid,\n      answer\n    })\n    .then(() => {\n      dispatch(savePollAnswer(authedUser, qid, answer))\n      dispatch(addUserAnswer(authedUser, qid, answer))\n    })\n    .then(() => dispatch(hideLoading()))\n  }\n}\n\nexport function handleAddPoll (optionOneText, optionTwoText) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState()\n\n    dispatch(showLoading())\n\n    return _saveQuestion({\n      optionOneText,\n      optionTwoText,\n      author: authedUser,\n    })\n    .then((formatedPoll) => {\n      dispatch(addPoll(formatedPoll))\n      dispatch(addUserQuestion(authedUser, formatedPoll.id))\n    })\n    .then(() => dispatch(hideLoading()))\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Redirect } from 'react-router-dom'\nimport { Card, CardHeader,CardBody, CardTitle, FormGroup, Label, Input, Form, Button, Row, Col} from 'reactstrap';\nimport { FaCheck } from 'react-icons/fa'\nimport User from './User'\nimport { handleSavePollAnswer } from '../actions/shared'\nimport { formatDate } from '../utils/helpers'\nimport './PollDetails.css'\n\nclass PollDetails extends PureComponent {\n  static propTypes = {\n    poll: PropTypes.object,\n    pollAuthor: PropTypes.object,\n    isAnswered: PropTypes.bool.isRequired,\n    isOptionOneAnswered: PropTypes.bool.isRequired,\n    savePollAnswer: PropTypes.func.isRequired\n  }\n\n  state = {\n    selectedOption: ''\n  }\n\n  radioSelected = (e) => {\n    this.setState({\n      selectedOption: e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.savePollAnswer(this.state.selectedOption)\n  }\n\n  render() {\n    const { poll, pollAuthor, isAnswered, isOptionOneAnswered} = this.props\n\n    if (!poll) {\n      return <Redirect to='/404' />\n    }\n\n    const { selectedOption } = this.state\n\n    const optionOneVotes = poll.optionOne.votes.length;\n    const optionTwoVotes = poll.optionTwo.votes.length;\n    const percentageOptionOne = (optionOneVotes / (optionOneVotes + optionTwoVotes) * 100).toFixed(2)\n    const percentageOptionTwo = (optionTwoVotes / (optionOneVotes + optionTwoVotes) * 100).toFixed(2)\n\n    const check = <FaCheck size=\"40\" color='green'/>\n\n    return (\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Card>\n            <CardHeader>\n              <User id={pollAuthor.id}/>\n              <div className=\"date\">{formatDate(poll.timestamp)}</div>\n            </CardHeader>\n            <CardBody>\n              <CardTitle>Would You Rather</CardTitle>\n              {isAnswered?\n                <ul>\n                  <li>{poll.optionOne.text} ({optionOneVotes} vote(s) | {percentageOptionOne}%){isOptionOneAnswered ? check : null}</li>\n                  <li>{poll.optionTwo.text} ({optionTwoVotes} vote(s) | {percentageOptionTwo}%){!isOptionOneAnswered ? check : null}</li>\n                </ul>:\n                <Form onSubmit={this.handleSubmit}>\n                  <FormGroup tag=\"fieldset\">\n                    <FormGroup check>\n                      <Label check>\n                        <Input type=\"radio\" name=\"radio1\" value=\"optionOne\" onChange={this.radioSelected}/>{' '}\n                        {poll.optionOne.text}\n                      </Label>\n                    </FormGroup>\n                    <FormGroup check>\n                      <Label check>\n                        <Input type=\"radio\" name=\"radio1\" value=\"optionTwo\" onChange={this.radioSelected}/>{' '}\n                        {poll.optionTwo.text}\n                      </Label>\n                    </FormGroup>\n                  </FormGroup>\n                  <Button disabled={selectedOption === ''}>Submit</Button>\n                </Form>\n              }\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nfunction mapStateToProps ({ polls, users, authedUser }, props) {\n  const { id } = props.match.params\n  const poll = polls[id]\n  const pollAuthor = users[poll.author];\n  const isOptionOneAnswered = poll.optionOne.votes.includes(authedUser)\n  const isOptionTwoAnswered = poll.optionTwo.votes.includes(authedUser)\n  const isAnswered = isOptionOneAnswered || isOptionTwoAnswered\n  return {\n    poll,\n    pollAuthor,\n    isAnswered,\n    isOptionOneAnswered\n  }\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  const { id } = props.match.params\n  return {\n    savePollAnswer: (answer) => {\n      dispatch(handleSavePollAnswer(id, answer))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PollDetails)\n","export function formatDate (timestamp) {\n  const d = new Date(timestamp)\n  const time = d.toLocaleTimeString('en-US')\n  return time.substr(0, 5) + time.slice(-2) + ' | ' + d.toLocaleDateString()\n}\n","import React, { PureComponent } from 'react';\nimport { Table } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport User from './User'\n\nclass LeaderBoard extends PureComponent {\n  static propTypes = {\n    table: PropTypes.array.isRequired\n  }\n\n  render() {\n    const { table } = this.props\n    return (\n      <Table>\n        <thead>\n          <tr>\n            <th>Rank</th>\n            <th>User</th>\n            <th>Poll Created</th>\n            <th>Poll Answered</th>\n          </tr>\n        </thead>\n        <tbody>\n          { table.map((user, index) =>\n            <tr key={user.id}>\n              <td>{index + 1}</td>\n              <td><User id={user.id}/></td>\n              <td>{user.created}</td>\n              <td>{user.answered}</td>\n            </tr>)\n          }\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nfunction mapStateToProps ({ users }) {\n  const table = Object.keys(users).map(id => ({\n    id,\n    created : users[id].questions.length,\n    answered: Object.keys(users[id].answers).length\n\n  })).sort((a, b) =>  b.created + b.answered - (a.created + a.answered))\n  return {\n    table\n  }\n}\n\nexport default connect(mapStateToProps)(LeaderBoard)\n","import React, { PureComponent } from 'react';\nimport { Card, CardBody, CardTitle, FormGroup, Label, Input, Form, Button, Row, Col} from 'reactstrap';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { handleAddPoll } from '../actions/shared'\n\n\nclass NewPoll extends PureComponent {\n  static propTypes = {\n    addPoll: PropTypes.func.isRequired,\n    history: PropTypes.object.isRequired\n  }\n  state = {\n    optionOne: '',\n    optionTwo: ''\n  }\n\n  handleOptionOneChange = (e) => {\n    e.preventDefault()\n    this.setState({\n      optionOne : e.target.value\n    })\n  }\n\n  handleOptionTwoChange = (e) => {\n    e.preventDefault()\n    this.setState({\n      optionTwo : e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const { optionOne, optionTwo } = this.state\n    this.props.addPoll(optionOne, optionTwo)\n    const { history } = this.props\n    history.push('/')\n  }\n\n  render() {\n    const { optionOne, optionTwo } = this.state\n\n    return (\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Card>\n            <CardBody>\n              <CardTitle>Would You Rather</CardTitle>\n              <Form onSubmit={this.handleSubmit}>\n                <FormGroup>\n                  <Label for=\"optionOne\">Option One</Label>\n                  <Input type=\"text\"\n                    name=\"optionOne\"\n                    value={optionOne}\n                    onChange={this.handleOptionOneChange}\n                    placeholder=\"Option One\" />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"optionTwo\">Option Two</Label>\n                  <Input type=\"text\"\n                    name=\"optionTwo\"\n                    value={optionTwo}\n                    onChange={this.handleOptionTwoChange}\n                    placeholder=\"Option Two\" />\n                </FormGroup>\n                <Button disabled={optionOne === '' || optionTwo === ''}>Submit</Button>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addPoll: (optionOne, optionTwo) => {\n      dispatch(handleAddPoll(optionOne, optionTwo))\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(NewPoll)\n","import React, { PureComponent, Fragment } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { unsetAuthedUser } from '../actions/authedUser'\nimport User from './User'\nimport { withRouter } from 'react-router-dom'\n\nclass NavBar extends PureComponent {\n  static propTypes = {\n    logout: PropTypes.func.isRequired,\n    authedUser: PropTypes.string,\n    history: PropTypes.object.isRequired\n  }\n\n  state = {\n    isOpen: false\n  }\n\n  toggle = () =>  {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  logout = (e) => {\n    e.preventDefault()\n    const { history, logout} = this.props\n    history.push('/')\n    logout()\n  }\n\n  render() {\n    const { authedUser } = this.props;\n\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand tag={Link} to=\"/\">Would You Rather</NavbarBrand>\n          { authedUser &&\n            <Fragment>\n              <NavbarToggler onClick={this.toggle} />\n              <Collapse isOpen={this.state.isOpen} navbar>\n                <Nav className=\"ml-auto\" navbar>\n                  <NavItem>\n                    <NavLink tag={Link} to=\"/\">Home</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink tag={Link} to=\"/leaderboard\">Leaderboard</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink tag={Link} to=\"/add\">Add Poll</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <User id={authedUser}/>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink onClick={this.logout}>Logout</NavLink>\n                  </NavItem>\n                </Nav>\n              </Collapse>\n            </Fragment>\n          }\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps ({ authedUser }) {\n  return {\n    authedUser\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => {\n      dispatch(unsetAuthedUser())\n    }\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavBar))\n","import React, { PureComponent } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { setAuthedUser } from '../actions/authedUser'\n\nclass Login extends PureComponent {\n  static propTypes = {\n    users: PropTypes.object.isRequired,\n    setAuthedUser: PropTypes.func.isRequired\n  }\n  state = {\n    userId : ''\n  }\n\n  onUserChange = (userId) => { this.setState({ userId })}\n\n  onLogin = () => {\n    const { userId } = this.state;\n    const { setAuthedUser } = this.props;\n    if (userId) {\n      setAuthedUser(userId);\n    }\n  }\n\n  render() {\n    const { users } = this.props;\n    const { userId } = this.state;\n    return (\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form>\n            <FormGroup>\n              <Label for=\"userSelect\">Select User</Label>\n              <Input type=\"select\" name=\"select\" value={userId} onChange={(event) => this.onUserChange(event.target.value)}>\n                <option value=\"\" disabled>Please select</option>\n                {\n                  Object.keys(users).map(user =>\n                  <option key={user} value={user}>\n                    {users[user].name}\n                  </option>)\n                }\n              </Input>\n            </FormGroup>\n            <Button onClick={this.onLogin} disabled={!userId}>Login</Button>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nfunction mapStateToProps ({ users }) {\n  return {\n    users\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setAuthedUser: (id) => {\n      dispatch(setAuthedUser(id))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { Fragment } from 'react';\nimport { NavLink } from 'react-router-dom'\n\nfunction NotFound() {\n  return (\n    <Fragment>\n      <div>404 Not Found</div>\n      <NavLink to=\"/\">Click here </NavLink> to go back to home page\n    </Fragment>\n  );\n}\n\nexport default NotFound\n","import React, { PureComponent, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport LoadingBar from 'react-redux-loading'\nimport Dashboard from './Dashboard'\nimport PollDetails from './PollDetails'\nimport LeaderBoard from './LeaderBoard'\nimport NewPoll from './NewPoll'\nimport NavBar from './NavBar'\nimport Login from './Login'\nimport NotFound from './404Page'\nimport { handleInitialData } from '../actions/shared'\n\n\nclass App extends PureComponent {\n  static propTypes = {\n    handleInitialData : PropTypes.func.isRequired,\n    notLoggedIn: PropTypes.bool.isRequired\n  }\n  componentDidMount() {\n    this.props.handleInitialData()\n  }\n  render() {\n    const { notLoggedIn } = this.props\n\n    return (\n      <Router>\n        <Fragment>\n          <LoadingBar className=\"loading-bar\"/>\n          <div className=\"main-container\">\n            <NavBar />\n            <div className=\"container\">\n              <Switch>\n                {\n                  notLoggedIn ? <Route path='/' exact component={Login} /> :\n                  <Fragment>\n                    <Route path='/' exact component={Dashboard} />\n                    <Route path='/questions/:id' component={PollDetails} />\n                    <Route path='/add' component={NewPoll} />\n                    <Route path='/leaderboard' component={LeaderBoard} />\n                  </Fragment>\n                }\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Fragment>\n      </Router>\n    );\n  }\n}\n\n\nfunction mapStateToProps ({ authedUser }) {\n  return {\n    notLoggedIn: authedUser === null\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleInitialData: () => {\n      dispatch(handleInitialData())\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\ndocument.getElementById('root')\n)\n"],"sourceRoot":""}